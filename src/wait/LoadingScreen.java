package wait;

import java.awt.Color;
import java.awt.Toolkit;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * @author dilson zapata <dilsonzapata3@gmail.com>
 */
public abstract class LoadingScreen extends javax.swing.JDialog {

    boolean Result = false;
    boolean canceled;
    Threader hilo;

    /**
     * @param parent
     * @param modal
     */
    public LoadingScreen(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        _init();

        hilo = new Threader(true) {

            @Override
            public void doOnStart() {

            }

            @Override
            public void doSomething() {
                try {

                    Result = doSomeThing();
                    this.finalize();

                } catch (Throwable ex) {
                    try {
                        Result = false;
                        this.finalize();
                    } catch (Throwable ex1) {
                        Logger.getLogger(LoadingScreen.class.getName()).log(Level.SEVERE, null, ex1);
                    }
                
                }
            }

            @Override
            public void doOnStop() {

            }

            @Override
            protected void finalize() throws Throwable {
                this.stop();
                super.finalize();
                clear();
                setVisible(false);

            }
        };

    }

    /**
     * Metodo donde se colocara el proceso que se hara durante la espera de la
     * pantalla
     * @return debe de retornar true si hizo todo el proceso
     */
    abstract public boolean doSomeThing();

    public LoadingScreen() {

        this(null, true);

        this.setVisible(true);
    }

    public void clear() {

        this.dispose();
    }

    public boolean getResult() {
        return Result;
    }

    public boolean isCanceled() {
        return canceled;
    }

    @Override
    public void setVisible(boolean value) {
        if (value) {
            hilo.start();
        }
        super.setVisible(value);

    }

    final public void _init() {
        initComponents();
        this.dispose();
        this.setUndecorated(true);
        this.setResizable(false);
        this.setAlwaysOnTop(true);
        this.getRootPane().setOpaque(false);
        this.setSize(Toolkit.getDefaultToolkit().getScreenSize());
        this.setLocation(0, 0);
        this.setBackground(new Color(3, 3, 3, 60));
        this.setFocusable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/wait.gif"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed

    }//GEN-LAST:event_formKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
